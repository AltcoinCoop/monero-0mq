<class
    name = "wap_server"
    title = "Wallet Server"
    script = "zproto_server_c"
    protocol_class = "wap_proto"
    package_dir = "../include"
    project_header = "wap_classes.h"
    export_macro = "WAP_EXPORT"
    >
    This is a server implementation of the Wallet Access Protocol
    <include filename = "../license.xml" />

    <state name = "start" inherit = "defaults">
        <event name = "OPEN" next = "connected">
            <action name = "register the wallet" />
            <action name = "send" message = "OPEN OK" />
        </event>
        <!-- If wallet sends us anything after we restart, we signal error
            and wallet will then close its connection, and reconnect -->
        <event name = "*">
            <action name = "signal command not valid" />
            <action name = "send" message = "ERROR" />
        </event>
    </state>

    <state name = "connected" inherit = "defaults">
        <event name = "BLOCKS">
            <action name = "retrieve the blocks" />
            <action name = "send" message = "BLOCKS OK" />
        </event>
        <event name = "PUT">
            <action name = "store the transaction" />
            <action name = "send" message = "PUT OK" />
        </event>
        <event name = "GET">
            <action name = "retrieve the transaction" />
            <action name = "send" message = "GET OK" />
        </event>
        <event name = "SAVE">
            <action name = "send" message = "SAVE OK" />
        </event>
        <event name = "START">
            <action name = "start the mining process" />
            <action name = "send" message = "START OK" />
        </event>
        <event name = "STOP">
            <action name = "stop the mining process" />
            <action name = "send" message = "STOP OK" />
        </event>
    </state>

    <state name = "defaults">
        <event name = "CLOSE" next = "settling">
            <action name = "send" message = "CLOSE OK" />
            <action name = "deregister the wallet" />
            <action name = "allow time to settle" />
        </event>
        <event name = "PING">
            <action name = "send" message = "PING OK" />
        </event>
        <!-- This built-in event hits on a client timeout -->
        <event name = "expired" next = "settling">
            <action name = "deregister the wallet" />
            <action name = "allow time to settle" />
        </event>
        <!-- Client tried to do something we don't allow yet -->
        <event name = "exception" next = "settling">
            <action name = "send" message = "ERROR" />
            <action name = "deregister the wallet" />
            <action name = "allow time to settle" />
        </event>
        <!-- All other protocol messages are invalid -->
        <event name = "*" next = "settling">
            <action name = "signal command not valid" />
            <action name = "send" message = "ERROR" />
            <action name = "deregister the wallet" />
            <action name = "allow time to settle" />
        </event>
    </state>

    <state name = "settling">
        <event name = "settled">
            <action name = "terminate" />
        </event>
        <event name = "OPEN" next = "connected">
            <action name = "register new client" />
            <action name = "send" message = "OPEN OK" />
        </event>
        <event name = "*">
            <!-- Ignore any other commands -->
        </event>
    </state>
</class>
